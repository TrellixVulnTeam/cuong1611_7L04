{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Downloads\\\\Archive-20201226\\\\src\\\\pages\\\\TrangChu\\\\TrangChu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport Axios from 'axios';\nimport { getDataFilmAction } from '../../redux/actions/QuanLyPhimActions';\nimport { NavLink } from 'react-router-dom';\nexport default function TrangChu(props) {\n  _s();\n\n  //useSelector là hook reactredux cung cấp dùng để lấy state từ store về\n  const mangPhim = useSelector(state => state.QuanLyPhimReducer.mangPhim); //useDispatch là hook thay thế cho props.dispatch khi dùng redux connect\n\n  const dispatch = useDispatch();\n  console.log('mangPhim', mangPhim);\n\n  const loadDataPhim = async () => {\n    dispatch(getDataFilmAction());\n  }; //useEffect Thay thế cho các lifecycle (didMount,didUpdate,willUnmount)\n\n\n  useEffect(() => {\n    //Chạy 1 lần duy nhất sau khi giao diện render (ứng với componentDidMount)\n    dispatch(getDataFilmAction()); //Vừa vào trang sẽ load danh sách phim\n  }, []);\n\n  const renderFilm = () => {\n    return mangPhim.map((phim, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"card-img-top\",\n            src: phim.hinhAnh,\n            alt: phim.hinhAnh\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"card-title\",\n              children: phim.tenPhim\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: phim.moTa\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 20\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        loadDataPhim();\n      },\n      children: \"Load danh s\\xE1ch phim\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), \"Trang ch\\u1EE7\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: renderFilm()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n} // //Kết nối đến reducer lấy dữ liệu mảng phim về => props.mangPhim\n// const mapStateToProps = (state) => {\n//     return {\n//         mangPhim:state.QuanLyPhimReducer.mangPhim\n//     }\n// }\n// export default connect(mapStateToProps)(TrangChu)\n\n_s(TrangChu, \"whgIuq1gJemlM6h0nzXtJA3SGBg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = TrangChu;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrangChu\");","map":{"version":3,"sources":["C:/Users/Acer/Downloads/Archive-20201226/src/pages/TrangChu/TrangChu.js"],"names":["React","useEffect","connect","useSelector","useDispatch","Axios","getDataFilmAction","NavLink","TrangChu","props","mangPhim","state","QuanLyPhimReducer","dispatch","console","log","loadDataPhim","renderFilm","map","phim","index","hinhAnh","tenPhim","moTa"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,aAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,uCAAlC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACpC;AACA,QAAMC,QAAQ,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,iBAAN,CAAwBF,QAAlC,CAA5B,CAFoC,CAGpC;;AACA,QAAMG,QAAQ,GAAGT,WAAW,EAA5B;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,QAAxB;;AACA,QAAMM,YAAY,GAAG,YAAY;AAC7BH,IAAAA,QAAQ,CAACP,iBAAiB,EAAlB,CAAR;AACH,GAFD,CANoC,CAUpC;;;AACAL,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAY,IAAAA,QAAQ,CAACP,iBAAiB,EAAlB,CAAR,CAFY,CAEmB;AAClC,GAHQ,EAGN,EAHM,CAAT;;AAIA,QAAMW,UAAU,GAAG,MAAM;AACrB,WAAOP,QAAQ,CAACQ,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,0BAAO;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACH;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,cAAf;AAA8B,YAAA,GAAG,EAAED,IAAI,CAACE,OAAxC;AAAiD,YAAA,GAAG,EAAEF,IAAI,CAACE;AAA3D;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,wBAA4BF,IAAI,CAACG;AAAjC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAG,cAAA,SAAS,EAAC,WAAb;AAAA,wBAA0BH,IAAI,CAACI;AAA/B;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,SAA4BH,KAA5B;AAAA;AAAA;AAAA;AAAA,cAAP;AAYH,KAbM,CAAP;AAcH,GAfD;;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAE,MAAM;AACnBJ,QAAAA,YAAY;AACf,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,iCAKI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACKC,UAAU;AADf;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,C,CACD;AACA;AACA;AACA;AACA;AACA;AAEA;;GAlDwBT,Q;UAEHL,W,EAEAC,W;;;KAJGI,Q","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport Axios from 'axios'\nimport { getDataFilmAction } from '../../redux/actions/QuanLyPhimActions';\nimport { NavLink } from 'react-router-dom';\nexport default function TrangChu(props) {\n    //useSelector là hook reactredux cung cấp dùng để lấy state từ store về\n    const mangPhim = useSelector(state => state.QuanLyPhimReducer.mangPhim);\n    //useDispatch là hook thay thế cho props.dispatch khi dùng redux connect\n    const dispatch = useDispatch();\n    console.log('mangPhim', mangPhim);\n    const loadDataPhim = async () => {\n        dispatch(getDataFilmAction())\n    }\n\n    //useEffect Thay thế cho các lifecycle (didMount,didUpdate,willUnmount)\n    useEffect(() => {\n        //Chạy 1 lần duy nhất sau khi giao diện render (ứng với componentDidMount)\n        dispatch(getDataFilmAction()); //Vừa vào trang sẽ load danh sách phim\n    }, []);\n    const renderFilm = () => {\n        return mangPhim.map((phim, index) => {\n            return <div className=\"col-4\" key={index}>\n                <div className=\"card\">\n                    <img className=\"card-img-top\" src={phim.hinhAnh} alt={phim.hinhAnh} />\n                    <div className=\"card-body\">\n                        <h4 className=\"card-title\">{phim.tenPhim}</h4>\n                        <p className=\"card-text\">{phim.moTa}</p>\n                        {/* <NavLink className=\"btn btn-danger\">\n                            Mua vé\n                        </NavLink> */}\n                    </div>\n                </div>\n            </div>\n        })\n    };\n    return (\n        <div className=\"container\">\n            <button onClick={() => {\n                loadDataPhim();\n            }}>Load danh sách phim</button>\n            Trang chủ\n            <div className=\"row\">\n                {renderFilm()}\n            </div>\n        </div>\n    )\n}\n// //Kết nối đến reducer lấy dữ liệu mảng phim về => props.mangPhim\n// const mapStateToProps = (state) => {\n//     return {\n//         mangPhim:state.QuanLyPhimReducer.mangPhim\n//     }\n// }\n\n// export default connect(mapStateToProps)(TrangChu)"]},"metadata":{},"sourceType":"module"}